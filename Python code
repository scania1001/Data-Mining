# -*- coding: utf-8 -*-
#匯入sklearn package來使用
from sklearn.feature_extraction import DictVectorizer
import csv
from sklearn import preprocessing
from sklearn import tree
from sklearn.externals.six import StringIO


#讀入資料檔案
aData = open(r'cmc.data.csv','r')


reader = csv.reader(aData)
headers = next(reader)
#headers = reader.next()  
#Print標題
#print(headers)
#1

featureList=[]
labelList=[]
#建立一個陣列featurelist來儲存feature attribute
#建立一個陣列labellist來儲存class attribute
for row in reader:
    labelList.append(row[len(row)-1])
#    抓最後的1欄位，所以總row數-1     
#    labelList.append(row[0]) #抓欄位1
    rowDict ={}
    for i in range(0,len(row)-1):
#   欄位1~欄位9 所以由 0 開始
        rowDict[headers[i]]=row[i]
    featureList.append(rowDict)
#實作資料存取    
#第二階段資料轉換(驗證)    
#print(featureList)    
#print(labelList)
#2

#Vector Feature 向量特徵
#featureList目標格式的轉換0、1
vec=DictVectorizer(sparse=False)
dummyX=vec.fit_transform(featureList)
#vec = DictVectorizer()  
#dummyX = vec.fit_transform(featureList) .toarray()  

#print('dummyX:'+str(dummyX))
#print(vec.get_feature_names())
#print('labelList:'+str(labelList))

#labelList目標格式的轉換0、1
lb=preprocessing.LabelBinarizer()
dummyY=lb.fit_transform(labelList)
#print('dummyY:'+str(dummyY))


#使用決策樹做分類
#建立一個分類器，entropy決定了用ID3算法
clf=tree.DecisionTreeClassifier(criterion='entropy')
clf=clf.fit(dummyX,dummyY)
print('clf:'+str(clf))

#Visulize model
with open("allElectronicInformationGainOri.dot",'w') as f:
    f =tree.export_graphviz(clf,feature_names=vec.get_feature_names(),out_file=f)


